'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _style = require('styled-jsx\\style.js');

var _style2 = _interopRequireDefault(_style);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactAvatar = require('react-avatar');

var _reactAvatar2 = _interopRequireDefault(_reactAvatar);

var _user = require('../actions/user.js');

var _link = require('next\\dist\\lib\\link.js');

var _link2 = _interopRequireDefault(_link);

var _loader = require('./loader.js');

var _loader2 = _interopRequireDefault(_loader);

var _subscribeButton = require('./subscribeButton.js');

var _subscribeButton2 = _interopRequireDefault(_subscribeButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 1 Level: accepting userlist data
// 2 Level: accepting userID and retriving userSubscriptions
// 3 Level: accepting nothing and retriving all users

var UserList = function (_React$Component) {
	(0, _inherits3.default)(UserList, _React$Component);

	function UserList(props) {
		(0, _classCallCheck3.default)(this, UserList);

		var _this = (0, _possibleConstructorReturn3.default)(this, (UserList.__proto__ || (0, _getPrototypeOf2.default)(UserList)).call(this, props));

		_this.state = {
			users: [],
			isLoaded: false
		};
		return _this;
	}

	(0, _createClass3.default)(UserList, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			var _this2 = this;

			if (this.props.datausers === undefined) {
				if (this.props.subscriber) {
					(0, _user.getUserSubscriptions)(this.props.subscriber).then(function (res) {
						_this2.setState({
							users: res.data
						});
					});
				} else {
					(0, _user.getAllUsers)().then(function (res) {
						_this2.setState({
							users: res.data
						});
					});
				}
			} else {
				this.setState({
					users: this.props.datausers
				});
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.setState({
				isLoaded: true
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			if (this.state.isLoaded) {
				if (this.state.users.length == 0) {
					return _react2.default.createElement('div', { className: 'no-content' }, _react2.default.createElement('p', null, '\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u0443\u0441\u0442'));
				} else {
					return _react2.default.createElement('div', { className: 'user-list', 'data-jsx': 1613525641
					}, this.state.users.map(function (item, i) {
						return _react2.default.createElement(User, { size: _this3.props.size, userData: item, key: i });
					}), _react2.default.createElement(_style2.default, {
						styleId: 1613525641,
						css: '.user-list[data-jsx="1613525641"] {width:100%;}\n/*# sourceMappingURL=data:application/json;base64, */\n/*@ sourceURL=components\\user-list.js */'
					}));
				}
			} else {
				return _react2.default.createElement(_loader2.default, null);
			}
		}
	}]);

	return UserList;
}(_react2.default.Component);

exports.default = UserList;


var User = function (_React$Component2) {
	(0, _inherits3.default)(User, _React$Component2);

	function User(props) {
		(0, _classCallCheck3.default)(this, User);

		return (0, _possibleConstructorReturn3.default)(this, (User.__proto__ || (0, _getPrototypeOf2.default)(User)).call(this, props));
	}

	(0, _createClass3.default)(User, [{
		key: 'render',
		value: function render() {
			var user = this.props.userData;
			if (user) {
				if (this.props.size != 'block') {
					return _react2.default.createElement('div', { className: 'item', 'data-jsx': 821951332
					}, _react2.default.createElement(_link2.default, { href: { pathname: 'user', query: { slug: user.slug } } }, _react2.default.createElement('a', {
						'data-jsx': 821951332
					}, _react2.default.createElement(_reactAvatar2.default, { color: '#46978c', round: true, size: 32, src: user.userImage, name: user.userName }))), _react2.default.createElement('div', { className: 'content', 'data-jsx': 821951332
					}, _react2.default.createElement('h4', { className: 'ui header', 'data-jsx': 821951332
					}, _react2.default.createElement(_link2.default, { href: { pathname: 'user', query: { slug: user.slug } } }, _react2.default.createElement('a', {
						'data-jsx': 821951332
					}, user.userName)), _react2.default.createElement('div', { className: 'sub header', 'data-jsx': 821951332
					}, user.userDescription ? user.userDescription : '\u041F\u043E\u0434\u043F\u0438\u0441\u0447\u0438\u043A\u043E\u0432: ' + user.userSubscribersCount))), _react2.default.createElement('div', { className: 'updates', 'data-jsx': 821951332
					}, '+1'), _react2.default.createElement(_style2.default, {
						styleId: 821951332,
						css: '.item[data-jsx="821951332"] {margin:10px 0px;border-bottom:1px solid rgba(255,255,255,0.2);display:-webkit-flex; display:flex;align-items:center;-webkit-flex-direction:row;-moz-flex-direction:row;flex-direction:row;padding:7px 0px;}.item[data-jsx="821951332"]:last-child {border-bottom:0px;}.item[data-jsx="821951332"]:first-child {margin-top:0px;}.item[data-jsx="821951332"] .content[data-jsx="821951332"] {margin-left:10px;}.item[data-jsx="821951332"] .content[data-jsx="821951332"] .sub.header[data-jsx="821951332"] {font-size:13px;margin-top:2px;opacity:0.7;}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHNcXHVzZXItbGlzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxR2tCLEFBQ0osNkJBQ1UsZ0JBQzhCLDhDQUNqQyxtQ0FDTSxtQkFDQSxzRUFDSCxnQkFDaEIsQ0FFaUIsd0NBQ0Msa0JBQ2xCLENBRWtCLHlDQUNILGVBQ2YsQ0FFZSw0REFDRSxpQkFDakIsQ0FFMkIsOEZBQ1osZUFDQSxlQUNILFlBQ1oiLCJmaWxlIjoiY29tcG9uZW50c1xcdXNlci1saXN0LmpzIiwic291cmNlUm9vdCI6IkU6L3d3dy9MZXZlbHVwLm5hbWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgQXZhdGFyIGZyb20gJ3JlYWN0LWF2YXRhcidcclxuaW1wb3J0IHsgZ2V0VXNlckJ5SWQsIGdldFVzZXJTdWJzY3JpcHRpb25zLCBnZXRBbGxVc2VycyB9IGZyb20gJy4uL2FjdGlvbnMvdXNlci5qcydcclxuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xyXG5pbXBvcnQgTG9hZGVyIGZyb20gJy4vbG9hZGVyLmpzJ1xyXG5pbXBvcnQgU3Vic2NyaWJlQnV0dG9uIGZyb20gJy4vc3Vic2NyaWJlQnV0dG9uLmpzJ1xyXG5cclxuLy8gMSBMZXZlbDogYWNjZXB0aW5nIHVzZXJsaXN0IGRhdGFcclxuLy8gMiBMZXZlbDogYWNjZXB0aW5nIHVzZXJJRCBhbmQgcmV0cml2aW5nIHVzZXJTdWJzY3JpcHRpb25zXHJcbi8vIDMgTGV2ZWw6IGFjY2VwdGluZyBub3RoaW5nIGFuZCByZXRyaXZpbmcgYWxsIHVzZXJzXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIHVzZXJzOiBbXSxcclxuICAgICAgaXNMb2FkZWQ6IGZhbHNlXHJcbiAgICB9XHJcbiAgfSBcclxuXHJcblx0Y29tcG9uZW50V2lsbE1vdW50KCkge1xyXG5cdFx0aWYodGhpcy5wcm9wcy5kYXRhdXNlcnMgPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRpZih0aGlzLnByb3BzLnN1YnNjcmliZXIpIHtcclxuXHRcdFx0XHRnZXRVc2VyU3Vic2NyaXB0aW9ucyh0aGlzLnByb3BzLnN1YnNjcmliZXIpLnRoZW4oKHJlcykgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy5zZXRTdGF0ZSh7XHJcblx0XHRcdFx0XHRcdHVzZXJzIDogcmVzLmRhdGFcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRnZXRBbGxVc2VycygpLnRoZW4oKHJlcykgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy5zZXRTdGF0ZSh7XHJcblx0XHRcdFx0XHRcdHVzZXJzOiByZXMuZGF0YVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLnNldFN0YXRlKHtcclxuXHRcdFx0XHR1c2VyczogdGhpcy5wcm9wcy5kYXRhdXNlcnNcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gIFx0dGhpcy5zZXRTdGF0ZSh7XHJcbiAgXHRcdGlzTG9hZGVkOiB0cnVlXHJcbiAgXHR9KVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gIGlmKHRoaXMuc3RhdGUuaXNMb2FkZWQpIHtcclxuICBcdCAgaWYodGhpcy5zdGF0ZS51c2Vycy5sZW5ndGggPT0gMCkge1xyXG5cdCAgICAgIHJldHVybiAoXHJcblx0ICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vLWNvbnRlbnRcIj5cclxuXHQgICAgICAgICAgPHA+0KHQv9C40YHQvtC6INC/0YPRgdGCPC9wPlxyXG5cdCAgICAgICAgPC9kaXY+XHJcblx0ICAgICAgKVxyXG5cdCAgIH0gZWxzZSB7XHJcblx0ICAgXHRyZXR1cm4gKFxyXG5cdCAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItbGlzdFwiPlxyXG5cdCAgICAgICAgIHt0aGlzLnN0YXRlLnVzZXJzLm1hcCgoaXRlbSwgaSkgPT4ge1xyXG5cdCAgICAgICAgICAgcmV0dXJuIDxVc2VyIHNpemU9e3RoaXMucHJvcHMuc2l6ZX0gdXNlckRhdGE9e2l0ZW19IGtleT17aX0gLz5cclxuXHQgICAgICAgICB9KX1cclxuXHQgICAgICAgICA8c3R5bGUganN4PntgXHJcblx0XHRcdFx0XHQudXNlci1saXN0IHtcclxuXHRcdFx0XHRcdFx0d2lkdGg6MTAwJTtcclxuXHRcdFx0XHRcdH1cclxuXHQgICAgICAgICBgfTwvc3R5bGU+XHJcblx0ICAgICAgIDwvZGl2PlxyXG5cdCAgICAgKVxyXG5cdCAgIH1cclxuICAgfSBlbHNlIHtcclxuXHQgICByZXR1cm4gKDxMb2FkZXIgLz4pXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuY2xhc3MgVXNlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHR9XHJcblx0cmVuZGVyKCkge1xyXG5cdFx0dmFyIHVzZXIgPSB0aGlzLnByb3BzLnVzZXJEYXRhXHJcblx0XHRpZih1c2VyKSB7XHJcblx0XHRcdGlmKHRoaXMucHJvcHMuc2l6ZSAhPSAnYmxvY2snKSB7XHJcblx0XHRcdFx0cmV0dXJuIChcclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiaXRlbVwiPlxyXG5cdFx0XHRcdFx0XHQ8TGluayBocmVmPXt7IHBhdGhuYW1lOiAndXNlcicsIHF1ZXJ5OiB7IHNsdWc6IHVzZXIuc2x1ZyB9fX0+PGE+XHJcblx0XHRcdCAgICAgICAgICAgICAgICA8QXZhdGFyIGNvbG9yPXtgIzQ2OTc4Y2B9IHJvdW5kPXt0cnVlfSBzaXplPXszMn0gc3JjPXt1c2VyLnVzZXJJbWFnZX0gbmFtZT17dXNlci51c2VyTmFtZX0gLz5cclxuXHRcdFx0ICAgICAgICAgICAgPC9hPjwvTGluaz5cclxuXHRcdFx0ICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50XCI+XHJcblx0XHRcdFx0XHRcdFx0PGg0IGNsYXNzTmFtZT1cInVpIGhlYWRlclwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0PExpbmsgaHJlZj17eyBwYXRobmFtZTogJ3VzZXInLCBxdWVyeTogeyBzbHVnOiB1c2VyLnNsdWcgfX19PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YT57dXNlci51c2VyTmFtZX08L2E+XHJcblx0XHRcdFx0XHRcdFx0XHQ8L0xpbms+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInN1YiBoZWFkZXJcIj57KHVzZXIudXNlckRlc2NyaXB0aW9uKSA/IHVzZXIudXNlckRlc2NyaXB0aW9uIDogYNCf0L7QtNC/0LjRgdGH0LjQutC+0LI6ICR7dXNlci51c2VyU3Vic2NyaWJlcnNDb3VudH1gfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvaDQ+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInVwZGF0ZXNcIj5cclxuXHRcdFx0XHRcdFx0XHQrMVxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PHN0eWxlIGpzeD57YFxyXG5cdFx0XHRcdFx0XHRcdC5pdGVtIHtcclxuXHRcdFx0XHRcdFx0XHRcdG1hcmdpbjoxMHB4IDBweDtcclxuXHRcdFx0XHRcdFx0XHRcdGJvcmRlci1ib3R0b206MXB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcclxuXHRcdFx0XHRcdFx0XHRcdGRpc3BsYXk6ZmxleDtcclxuXHRcdFx0XHRcdFx0XHRcdGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuXHRcdFx0XHRcdFx0XHRcdGZsZXgtZGlyZWN0aW9uOnJvdztcclxuXHRcdFx0XHRcdFx0XHRcdHBhZGRpbmc6N3B4IDBweDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdC5pdGVtOmxhc3QtY2hpbGQge1xyXG5cdFx0XHRcdFx0XHRcdFx0Ym9yZGVyLWJvdHRvbTowcHg7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHQuaXRlbTpmaXJzdC1jaGlsZCB7XHJcblx0XHRcdFx0XHRcdFx0XHRtYXJnaW4tdG9wOjBweDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdC5pdGVtIC5jb250ZW50IHtcclxuXHRcdFx0XHRcdFx0XHRcdG1hcmdpbi1sZWZ0OjEwcHg7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHQuaXRlbSAuY29udGVudCAuc3ViLmhlYWRlciB7XHJcblx0XHRcdFx0XHRcdFx0XHRmb250LXNpemU6MTNweDtcclxuXHRcdFx0XHRcdFx0XHRcdG1hcmdpbi10b3A6MnB4O1xyXG5cdFx0XHRcdFx0XHRcdFx0b3BhY2l0eTowLjc7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0YH08L3N0eWxlPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0KSBcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XHJcblx0XHRcdFx0XHQgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2VcIj5cclxuXHRcdFx0XHRcdCAgICA8QXZhdGFyIGNvbG9yPXtgIzQ2OTc4Y2B9IHJvdW5kPXt0cnVlfSBzaXplPXs1MH0gc3JjPXt1c2VyLnVzZXJJbWFnZX0gbmFtZT17dXNlci51c2VyTmFtZX0gLz5cclxuXHRcdFx0XHRcdCAgPC9kaXY+XHJcblx0XHRcdFx0XHQgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxyXG5cdFx0XHQgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGVmdFwiPlxyXG5cdFx0XHQgIFx0XHQgICAgPExpbmsgaHJlZj17eyBwYXRobmFtZTogJ3VzZXInLCBxdWVyeTogeyBzbHVnOiB1c2VyLnNsdWcgfX19PlxyXG5cdFx0XHQgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJoZWFkZXJcIj57dXNlci51c2VyTmFtZX08L2E+IFxyXG5cdFx0XHQgICAgICAgICAgPC9MaW5rPlxyXG5cdFx0XHQgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3Vic2NyaWJlcnNcIj4xINC/0L7QtNC/0LjRgdGH0LjQujwvc3Bhbj5cclxuXHRcdFx0ICBcdFx0ICAgIDxkaXYgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIj5cclxuXHRcdFx0ICBcdFx0ICAgICAge3VzZXIudXNlckJpb31cclxuXHRcdFx0ICBcdFx0ICAgIDwvZGl2PlxyXG5cdFx0XHQgICAgICAgIDwvZGl2PlxyXG5cdFx0XHQgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHRcIj5cclxuXHRcdFx0ICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWN0aW9uXCI+XHJcblx0XHRcdCAgICAgICAgICA8U3Vic2NyaWJlQnV0dG9uIHN1YnNjcmliZVRleHQ9XCLQn9C+0LTQv9C40YHQsNGC0YzRgdGPXCIgdW5zdWJzY3JpYmVUZXh0PVwi0J/QvtC00L/QuNGB0LDRgtGM0YHRj1wiIGFkZGl0aW9uYWxDbGFzc2VzPVwiYmFzaWMgc21hbGxcIiAvPlxyXG5cdFx0XHQgICAgICAgIDwvZGl2PlxyXG5cdFx0XHQgICAgICAgIDwvZGl2PlxyXG5cdFx0XHRcdFx0ICA8L2Rpdj5cclxuXHJcblx0XHRcdCAgICAgIDxzdHlsZSBqc3g+e2BcclxuXHRcdFx0ICAgICAgICAuaXRlbSB7XHJcblx0XHRcdCAgICAgICAgICBkaXNwbGF5OmZsZXg7XHJcblx0XHRcdCAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XHJcblx0XHRcdCAgICAgICAgICB3aWR0aDoxMDAlO1xyXG5cdFx0XHQgICAgICAgICAgcGFkZGluZy1ib3R0b206OHB4O1xyXG5cdFx0XHQgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2VlZTtcclxuXHRcdFx0ICAgICAgICAgIG1hcmdpbjo4cHggMHB4O1xyXG5cdFx0XHQgICAgICAgIH1cclxuXHJcblx0XHRcdCAgICAgICAgLml0ZW0gLmNvbnRlbnQge1xyXG5cdFx0XHQgICAgICAgICAgZGlzcGxheTpmbGV4O1xyXG5cdFx0XHQgICAgICAgICAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47XHJcblx0XHRcdCAgICAgICAgICB3aWR0aDoxMDAlO1xyXG5cdFx0XHQgICAgICAgICAgbWFyZ2luLWxlZnQ6MTVweDtcclxuXHRcdFx0ICAgICAgICB9XHJcblxyXG5cdFx0XHQgICAgICAgIC5pdGVtIC5jb250ZW50IC5oZWFkZXIge1xyXG5cdFx0XHQgICAgICAgICAgZm9udC13ZWlnaHQ6Ym9sZDtcclxuXHRcdFx0ICAgICAgICB9XHJcblxyXG5cdFx0XHQgICAgICAgIC5pdGVtIC5jb250ZW50IC5zdWJzY3JpYmVycyB7XHJcblx0XHRcdCAgICAgICAgICBmb250LXNpemU6MTVweDtcclxuXHRcdFx0ICAgICAgICAgIGZvbnQtd2VpZ2h0OjEwMDtcclxuXHRcdFx0ICAgICAgICAgIGNvbG9yOiNjMGMwYzA7XHJcblx0XHRcdCAgICAgICAgICBtYXJnaW4tbGVmdDoxMHB4O1xyXG5cdFx0XHQgICAgICAgIH1cclxuXHJcblxyXG5cdFx0XHQgICAgICBgfTwvc3R5bGU+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQpXHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiAoPGRpdj48L2Rpdj4pXHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiJdfQ== */\n/*@ sourceURL=components\\user-list.js */'
					}));
				} else {
					return _react2.default.createElement('div', { className: 'item', 'data-jsx': 3802949705
					}, _react2.default.createElement('div', { className: 'image', 'data-jsx': 3802949705
					}, _react2.default.createElement(_reactAvatar2.default, { color: '#46978c', round: true, size: 50, src: user.userImage, name: user.userName })), _react2.default.createElement('div', { className: 'content', 'data-jsx': 3802949705
					}, _react2.default.createElement('div', { className: 'left', 'data-jsx': 3802949705
					}, _react2.default.createElement(_link2.default, { href: { pathname: 'user', query: { slug: user.slug } } }, _react2.default.createElement('a', { className: 'header', 'data-jsx': 3802949705
					}, user.userName)), _react2.default.createElement('span', { className: 'subscribers', 'data-jsx': 3802949705
					}, '1 \u043F\u043E\u0434\u043F\u0438\u0441\u0447\u0438\u043A'), _react2.default.createElement('div', { className: 'description', 'data-jsx': 3802949705
					}, user.userBio)), _react2.default.createElement('div', { className: 'right', 'data-jsx': 3802949705
					}, _react2.default.createElement('div', { className: 'action', 'data-jsx': 3802949705
					}, _react2.default.createElement(_subscribeButton2.default, { subscribeText: '\u041F\u043E\u0434\u043F\u0438\u0441\u0430\u0442\u044C\u0441\u044F', unsubscribeText: '\u041F\u043E\u0434\u043F\u0438\u0441\u0430\u0442\u044C\u0441\u044F', additionalClasses: 'basic small' })))), _react2.default.createElement(_style2.default, {
						styleId: 3802949705,
						css: '.item[data-jsx="3802949705"] {display:-webkit-flex; display:flex;align-items:center;width:100%;padding-bottom:8px;border-bottom:1px solid #eee;margin:8px 0px;}.item[data-jsx="3802949705"] .content[data-jsx="3802949705"] {display:-webkit-flex; display:flex;justify-content:space-between;width:100%;margin-left:15px;}.item[data-jsx="3802949705"] .content[data-jsx="3802949705"] .header[data-jsx="3802949705"] {font-weight:bold;}.item[data-jsx="3802949705"] .content[data-jsx="3802949705"] .subscribers[data-jsx="3802949705"] {font-size:15px;font-weight:100;color:#c0c0c0;margin-left:10px;}\n/*# sourceMappingURL=data:application/json;base64, */\n/*@ sourceURL=components\\user-list.js */'
					}));
				}
			} else {
				return _react2.default.createElement('div', null);
			}
		}
	}]);

	return User;
}(_react2.default.Component);